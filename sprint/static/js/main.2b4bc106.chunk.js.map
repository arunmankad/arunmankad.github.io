{"version":3,"sources":["Login/Login.js","Teams/Teams.js","Iterations/Iterations.js","Sprint/Sprint.js","App.js","serviceWorker.js","index.js"],"names":["login","props","console","log","react_default","a","createElement","className","type","teams","value","map","team","index","key","onClick","click","bind","name","description","fa","size","moment","require","iterations","length","iteration","attributes","startDate","format","finishDate","timeFrame","sprint","data","roundTo","burnDown","currentSprint","isNaN","totalSprintEffort","totalRemainingHoursForSprint","up","ResponsiveContainer","width","aspect","AreaChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Area","stroke","fill","Object","keys","pbis","item","effort","undefined","totalRemainingHours","base64","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchAgain","url","serviceName","fetch","headers","state","then","res","json","setState","sprintDetailsLoaded","currentDisplay","fetchBurnDownData","_links","workitems","href","workItemsLoaded","workItems","processWorkItemHandler","iterationAreLoaded","loading","fetchEffort","objectSpread","id","fields","countOfPbisWithEffort","calculateCompletion","fetchRemainingHours","tasks","remainingHours","countOfTaskWithEffort","postBurnDown","sprintName","method","body","JSON","stringify","Content-Type","i","workItemRelations","rel","count","pbi","target","task","source","findEffortHandlers","totalRemainingHoursForPBI","toString","evaluateBurnDown","mom","today","startMoment","endMoment","currentPercentage","duration","diff","asDays","datesArray","parseInt","push","add","currentBurnDown","toConsumableArray","utcOffset","date","work","teamsClickHandler","iterationUrl","iterationClickHandler","selectedIteration","resetClickHandler","window","location","reload","tinyAreaChartClickHandler","alert","authenticated","teamsLoaded","calculateCompletionCallsCountAfterChecking","calculateCompletionCallsCountBeforeChecking","_this2","Headers","set","encode","status","react_spinners","sizeUnit","color","display","Teams_Teams","Iterations","Sprint_Sprint","Login_Login","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","response","contentType","get","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b4bc106.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Login.css\";\nconst login = props => {\n  console.log(\"PROPS\", props);\n  return (\n    <div className=\"Team\">\n      <div>\n        <p>Enter your PAT!</p>\n        <input type=\"password\" />\n        <button>Submit</button>\n      </div>\n    </div>\n  );\n};\nexport default login;\n","import React from \"react\";\nimport { FaUserFriends } from \"react-icons/fa\";\nimport \"./Teams.css\";\nconst teams = props => {\n  console.log(\"PROPS\", props);\n  const iconStyle = {\n    size: \"5em\"\n  };\n  return (\n    <div className=\"Team\">\n      <div>\n        <h3> Teams ! </h3>\n      </div>\n      <div className=\"container-2\">\n        {props.teams.value.map((team, index) => {\n          return (\n            <div\n              className=\"container-2-box\"\n              key={index}\n              onClick={props.click.bind(this, index)}\n            >\n              <section className=\"teamSection\">\n                <h3>{team.name}</h3>\n                <p>{team.description}</p>\n              </section>\n              <FaUserFriends className=\"teamIcon\" size=\"3em\" />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default teams;\n","import React from \"react\";\nimport { FaRunning } from \"react-icons/fa\";\nimport \"./Iteration.css\";\n\nconst moment = require(\"moment\");\n\nconst iterations = props => {\n  console.log(\"PROPS\", props);\n  return (\n    <div className=\"Team\">\n      <div>\n        <p>Iterations...</p>\n      </div>\n      <div className=\"container-2\">\n        {props.iterations.value.length !== 0 ? (\n          props.iterations.value.map((iteration, index) => {\n            return (\n              <div\n                className=\"container-2-box\"\n                key={index}\n                onClick={props.click.bind(this, index)}\n              >\n                <section className=\"teamSection\">\n                  <p>{iteration.name}</p>\n                  <p>\n                    Start:\n                    {moment(iteration.attributes.startDate).format(\"MMM Do YY\")}\n                  </p>\n                  <p>\n                    End:\n                    {moment(iteration.attributes.finishDate).format(\n                      \"MMM Do YY\"\n                    )}\n                  </p>\n                  <p>{iteration.attributes.timeFrame}</p>\n                </section>\n                <FaRunning className=\"iterationIcon\" size=\"3em\" />\n              </div>\n            );\n          })\n        ) : (\n          <p>No Data!</p>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default iterations;\n","import React from \"react\";\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from \"recharts\";\nimport \"./Sprint.css\";\n\nconst sprint = props => {\n  console.log(\"PROPS\", props);\n  const roundTo = require(\"round-to\");\n  const style = {\n    border: \"1px\"\n  };\n  let data = [];\n  data = props.burnDown;\n  return (\n    <div className=\"Team\">\n      <div className=\"sprintHeader\">\n        <div className=\"sprintHeaderLine\">\n          <p>Status of {props.currentSprint.sprint.name}!</p>\n          <p>\n            Completion:\n            {props.currentSprint.sprint.attributes.timeFrame !== \"future\"\n              ? !isNaN(\n                  ((props.currentSprint.totalSprintEffort * 12 -\n                    props.currentSprint.totalRemainingHoursForSprint) /\n                    (props.currentSprint.totalSprintEffort * 12)) *\n                    100\n                )\n                ? roundTo.up(\n                    ((props.currentSprint.totalSprintEffort * 12 -\n                      props.currentSprint.totalRemainingHoursForSprint) /\n                      (props.currentSprint.totalSprintEffort * 12)) *\n                      100,\n                    2\n                  ) + \"%\"\n                : null\n              : 0 + \"%\"}\n          </p>\n          <p>Total SPs:{props.currentSprint.totalSprintEffort}</p>\n        </div>\n        {/* <div>\n          <AreaChart\n            width={200}\n            height={100}\n            data={data}\n            margin={{ top: 5, right: 0, left: 0, bottom: 5 }}\n            onClick={props.click}\n          >\n            <Area\n              type=\"monotone\"\n              dataKey=\"uv\"\n              stroke=\"#2b7a78\"\n              fill=\"#2b7a78\"\n            />\n          </AreaChart>\n        </div> */}\n        {props.burnDown.length !== 0 ? (\n          <ResponsiveContainer width=\"100%\" aspect={4.0 / 1.0}>\n            <AreaChart\n              data={data}\n              margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"date\" />\n              <YAxis />\n              <Tooltip />\n              <Area\n                type=\"monotone\"\n                dataKey=\"work\"\n                stroke=\"#2b7a78\"\n                fill=\"#2b7a78\"\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        ) : null}\n      </div>\n      <div className=\"container-2\">\n        {Object.keys(props.currentSprint.pbis).map((item, index) => {\n          //   console.log(\"IIIIIIIIIIIIIIIIIII----\", item);\n          return (\n            <div className=\"container-pbi-box\" key={index}>\n              <div className=\"effort\">\n                {props.currentSprint.pbis[item].effort}\n              </div>\n              <section>\n                <p>PBI#:{item}</p>\n              </section>\n              {props.currentSprint.sprint.attributes.timeFrame !== \"future\"\n                ? props.currentSprint.pbis[item].effort !== 0 &&\n                  props.currentSprint.pbis[item].effort !== undefined\n                  ? roundTo.up(\n                      ((props.currentSprint.pbis[item].effort * 12 -\n                        props.currentSprint.pbis[item].totalRemainingHours) /\n                        (props.currentSprint.pbis[item].effort * 12)) *\n                        100,\n                      2\n                    ) + \"%\"\n                  : \"NA\"\n                : 0 + \"%\"}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default sprint;\n","import React, { Component } from \"react\";\nimport { FaRegChartBar } from \"react-icons/fa\";\nimport { FaUndoAlt } from \"react-icons/fa\";\nimport { HashLoader } from \"react-spinners\";\n// import Button from \"@material-ui/core/Button\";\n// import Card from \"react-bootstrap/Card\";\nimport \"./App.css\";\n\nimport Login from \"./Login/Login\";\nimport Teams from \"./Teams/Teams\";\nimport Iterations from \"./Iterations/Iterations\";\nimport Sprint from \"./Sprint/Sprint\";\n\nconst moment = require(\"moment\");\n\nconst base64 = require(\"base-64\");\nconst roundTo = require(\"round-to\");\nclass App extends Component {\n  //  lifecycle methods starts here\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      authenticated: false,\n      headers: {},\n      currentDisplay: \"loading\",\n      teamsLoaded: false,\n      teams: {},\n      iterationAreLoaded: false,\n      iterations: {},\n      selectedIteration: null,\n      sprintDetailsLoaded: false,\n      sprint: {},\n      workItemsLoaded: false,\n      workItems: {},\n      pbis: {},\n      tasks: {},\n      countOfPbisWithEffort: 0,\n      countOfTaskWithEffort: 0,\n      totalSprintEffort: 0,\n      totalRemainingHoursForSprint: 0,\n      calculateCompletionCallsCountAfterChecking: 0,\n      calculateCompletionCallsCountBeforeChecking: 0,\n      burnDown: []\n    };\n  }\n  componentDidMount() {\n    let headers = new Headers();\n\n    headers.set(\n      \"Authorization\",\n      \"Basic \" +\n        base64.encode(\n          \"Basic:kydfboq26hwqsv2bcgclszgmowdt67xppebpuopw57lky2me4jfa\"\n        )\n    );\n    this.setState({ headers: headers });\n    fetch(\n      \"https://dev.azure.com/utcbis/_apis/projects/2cfbe47b-71d8-4319-a840-e0eccbfb23ef/teams?api-version=5.0\",\n      { headers: headers }\n    )\n      .then(res => {\n        console.log(\"STATUS\", res.status);\n        if (res.status !== 200) {\n          this.setState({\n            authenticated: false,\n            loading: false\n          });\n        }\n        return res.json();\n      })\n      .then(json => {\n        this.setState({\n          authenticated: true,\n          loading: false,\n          teamsLoaded: true,\n          teams: json,\n          currentDisplay: \"teams\"\n        });\n      });\n  }\n  //  lifecycle methods ends here\n  //  services starts here\n  fetchAgain = (url, serviceName) => {\n    fetch(url, { headers: this.state.headers })\n      .then(res => res.json())\n      .then(json => {\n        console.log(\"JSON\", json);\n        if (serviceName === \"sprint\") {\n          // alert(json.name);\n          this.setState({\n            sprintDetailsLoaded: true,\n            sprint: json,\n            currentDisplay: \"sprint\"\n            // loading: false\n          });\n          this.fetchBurnDownData(\n            \"https://otis-app-fe-iaa-dev.azurewebsites.net/api/Redis?key=\" +\n              json.name\n          );\n          this.fetchAgain(this.state.sprint._links.workitems.href, \"workitems\");\n        } else if (serviceName === \"workitems\") {\n          this.setState({\n            workItemsLoaded: true,\n            workItems: json,\n            currentDisplay: \"workitems\"\n          });\n          this.processWorkItemHandler();\n        } else if (serviceName === \"iterations\") {\n          this.setState({\n            iterationAreLoaded: true,\n            iterations: json,\n            currentDisplay: \"iterations\",\n            loading: false\n          });\n        }\n      });\n  };\n\n  fetchEffort = url => {\n    fetch(url, { headers: this.state.headers })\n      .then(res => res.json())\n      .then(json => {\n        console.log(\"EFFORT\", json);\n        let pbis = { ...this.state.pbis };\n        pbis[json.id].effort = json.fields[\"Microsoft.VSTS.Scheduling.Effort\"];\n        pbis[json.id].state = json.fields[\"System.State\"];\n        this.setState({\n          pbis: pbis,\n          countOfPbisWithEffort: this.state.countOfPbisWithEffort + 1\n        });\n        this.calculateCompletion();\n      });\n  };\n  fetchRemainingHours = url => {\n    fetch(url, { headers: this.state.headers })\n      .then(res => res.json())\n      .then(json => {\n        console.log(\"REMAINING HOURS\", json);\n        let tasks = { ...this.state.tasks };\n        tasks[json.id].remainingHours =\n          json.fields[\"Microsoft.VSTS.Scheduling.RemainingWork\"];\n        tasks[json.id].state = json.fields[\"System.State\"];\n        this.setState({\n          tasks: tasks,\n          countOfTaskWithEffort: this.state.countOfTaskWithEffort + 1\n        });\n        this.calculateCompletion();\n      });\n  };\n  fetchBurnDownData = url => {\n    fetch(url)\n      .then(res => {\n        console.log(\"%%%%%%%%%%%%%%%%%%%%%% -\", res);\n        if (res === null || undefined) {\n          // alert(\"NULL\");\n          res = { data: [] };\n        }\n        return res.json();\n      })\n      .then(json => {\n        if (json !== null && json !== undefined) {\n          console.log(\"DATATATATATA -\", json.data);\n          if (json.data === null) {\n            json.data = [];\n          }\n          this.setState({\n            burnDown: json.data\n          });\n        } else {\n          this.setState({\n            burnDown: []\n          });\n        }\n      });\n  };\n  postBurnDown = (sprintName, data) => {\n    fetch(\n      \"https://otis-app-fe-iaa-dev.azurewebsites.net/api/cache?key=\" +\n        sprintName +\n        \"&expiry=43200000\",\n      {\n        method: \"post\",\n        body: JSON.stringify({\n          data: data\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    ).then(res => {\n      // alert(\"DATATATATATA -\", res);\n      this.fetchBurnDownData(\n        \"https://otis-app-fe-iaa-dev.azurewebsites.net/api/Redis?key=\" +\n          sprintName\n      );\n    });\n  };\n  // services ends\n  // processing ....\n  processWorkItemHandler = () => {\n    let count = 0;\n    let pbis = {};\n    let tasks = {};\n    for (let i = 0; i < this.state.workItems.workItemRelations.length; i++) {\n      if (this.state.workItems.workItemRelations[i].rel === null) {\n        count++;\n        let pbi = {};\n        pbi.id = this.state.workItems.workItemRelations[i].target.id;\n        pbi.url = this.state.workItems.workItemRelations[i].target.url;\n        pbis[pbi.id] = pbi;\n      } else if (\n        this.state.workItems.workItemRelations[i].rel ===\n        \"System.LinkTypes.Hierarchy-Forward\"\n      ) {\n        let task = {};\n        task.id = this.state.workItems.workItemRelations[i].target.id;\n        task.url = this.state.workItems.workItemRelations[i].target.url;\n        task.source = this.state.workItems.workItemRelations[i].source.id;\n        tasks[task.id] = task;\n      }\n    }\n    // alert(count);\n    console.log(\"PBIS\", pbis);\n    console.log(\"TASKS\", tasks);\n    this.setState({\n      currentDisplay: \"pbis\",\n      pbis: pbis,\n      tasks: tasks,\n      loading: false\n    });\n    this.findEffortHandlers();\n    console.log(\"HAHAHAHAHA\", this.state.currentDisplay);\n  };\n  findEffortHandlers = () => {\n    Object.keys(this.state.pbis).map((pbi, index) => {\n      console.log(\"URL\", this.state.pbis[pbi].url);\n      this.fetchEffort(this.state.pbis[pbi].url);\n    });\n    Object.keys(this.state.tasks).map((task, index) => {\n      this.fetchRemainingHours(this.state.tasks[task].url);\n    });\n  };\n  calculateCompletion = () => {\n    // console.log(\"LENGTH OF PBIS\", Object.keys(this.state.pbis).length);\n    // console.log(\"COUNT OF PBIS WITH EFFORT\", this.state.countOfPbisWithEffort);\n    // console.log(\"LENGTH OF TASKS\", Object.keys(this.state.tasks).length);\n    // console.log(\"COUNT OF TASKS WITH EFFORT\", this.state.countOfTaskWithEffort);\n    // this.setState({\n    //   calculateCompletionCallsCountBeforeChecking:\n    //     this.state.calculateCompletionCallsCountBeforeChecking + 1\n    // });\n    // console.log(\n    //   \"**************** CC Before **************\",\n    //   this.state.calculateCompletionCallsCountBeforeChecking\n    // );\n    if (\n      Object.keys(this.state.pbis).length !==\n        this.state.countOfPbisWithEffort ||\n      Object.keys(this.state.tasks).length !== this.state.countOfTaskWithEffort\n    ) {\n      // console.log(\n      //   \"RETURN-RETURN-RETURN-RETURN-RETURN - PBI -\" +\n      //     this.state.countOfPbisWithEffort +\n      //     \" -TASK- \" +\n      //     this.state.countOfTaskWithEffort\n      // );\n      return;\n    } else {\n      // alert(\"jdjdjdjdj\");\n    }\n\n    // this.setState({\n    //   calculateCompletionCallsCountAfterChecking:\n    //     this.state.calculateCompletionCallsCountAfterChecking + 1\n    // });\n    // console.log(\n    //   \"++++++++++++++++ CC After ++++++++++++++\",\n    //   this.state.calculateCompletionCallsCountAfterChecking\n    // );\n    let totalSprintEffort = 0;\n\n    Object.keys(this.state.pbis).map(pbi => {\n      let totalRemainingHoursForPBI = 0;\n      totalSprintEffort += !isNaN(this.state.pbis[pbi].effort)\n        ? this.state.pbis[pbi].effort\n        : 0;\n      Object.keys(this.state.tasks).map(task => {\n        // console.log(\"TASKS----\", this.state.tasks[task].source);\n        if (this.state.tasks[task].source.toString() === pbi) {\n          if (this.state.tasks[task].remainingHours !== undefined) {\n            totalRemainingHoursForPBI += !isNaN(\n              this.state.tasks[task].remainingHours\n            )\n              ? this.state.tasks[task].remainingHours\n              : 0;\n          }\n        }\n      });\n      let pbis = { ...this.state.pbis };\n      pbis[pbi].totalRemainingHours = totalRemainingHoursForPBI;\n      this.setState({\n        pbis: pbis\n      });\n    });\n    let totalRemainingHoursForSprint = 0;\n    Object.keys(this.state.pbis).map((pbi, index) => {\n      totalRemainingHoursForSprint += this.state.pbis[pbi].totalRemainingHours;\n    });\n    this.setState({\n      totalSprintEffort: totalSprintEffort,\n      totalRemainingHoursForSprint: totalRemainingHoursForSprint\n    });\n    this.evaluateBurnDown();\n  }; // calculate completion ends\n  evaluateBurnDown = () => {\n    if (this.state.sprint.attributes.timeFrame !== \"current\") {\n      return;\n    }\n    let mom = moment();\n    let today = mom.format(\"MMM-DD-YY\");\n    let startMoment = moment(this.state.sprint.attributes.startDate);\n    let endMoment = moment(this.state.sprint.attributes.finishDate);\n    let currentPercentage = roundTo.up(\n      ((this.state.totalSprintEffort * 12 -\n        this.state.totalRemainingHoursForSprint) /\n        (this.state.totalSprintEffort * 12)) *\n        100,\n      2\n    );\n    console.log(\"STRT\", startMoment.format(\"MMM Do YY\"));\n    console.log(\"END\", endMoment.format(\"MMM Do YY\"));\n    let duration = moment.duration(endMoment.diff(startMoment)).asDays();\n    let datesArray = [];\n    for (let i = 0; i < parseInt(duration); i++) {\n      // alert(startMoment.format(\"MMM-DD-YY\"));\n      if (i === 0) {\n        datesArray.push(startMoment.format(\"MMM-DD-YY\"));\n      }\n      if (\n        startMoment.format(\"dddd\") !== \"Friday\" &&\n        startMoment.format(\"dddd\") !== \"Saturday\"\n      ) {\n        datesArray.push(startMoment.add(1, \"d\").format(\"MMM-DD-YY\"));\n      } else {\n        startMoment.add(1, \"d\").format(\"MMM-DD-YY\");\n      }\n      // console.log(\"DATES -\", startMoment.add(1, \"d\").format(\"MMM-DD-YY\"));\n    }\n    let currentBurnDown = [...this.state.burnDown];\n\n    console.log(\"DATES ARRAY\", datesArray);\n    if (this.state.burnDown.length === 0 && mom.utcOffset() === 330) {\n      console.log(\"LENGTH LENGTH -\", this.state.burnDown.length);\n      console.log(\"utcOffset utcOffset -\", mom.utcOffset());\n      for (let i = 0; i < datesArray.length; i++) {\n        let data = {};\n        data.date = datesArray[i];\n        data.work = 0;\n        currentBurnDown.push(data);\n      }\n      this.setState({\n        burnDown: currentBurnDown\n      });\n      this.postBurnDown(this.state.sprint.name, this.state.burnDown);\n    } else {\n      for (let i = 0; i < currentBurnDown.length; i++) {\n        if (currentBurnDown[i].date === today && mom.utcOffset() === 330) {\n          currentBurnDown[i].work = 100 - currentPercentage;\n        }\n      }\n\n      this.setState({\n        burnDown: currentBurnDown\n      });\n      this.postBurnDown(this.state.sprint.name, this.state.burnDown);\n    }\n\n    // alert(mom.utcOffset());\n    return;\n    if (\n      this.state.sprint.attributes.timeFrame !== \"current\" ||\n      moment().format(\"dddd\") === \"Saturday\" ||\n      moment().format(\"dddd\") === \"Sunday\"\n    ) {\n      return;\n    }\n\n    // alert(currentPercentage);\n    console.log(\"^^^^^^^^^^^^^^^^^^\", this.state.burnDown.length === 0);\n    if (this.state.burnDown === null || this.state.burnDown.length === 0) {\n      console.log(\"reached!\");\n      this.postBurnDown(this.state.name, [\n        { date: today, work: 100 - currentPercentage }\n      ]);\n      // fetch(\n      //   \"https://otis-app-fe-iaa-dev.azurewebsites.net/api/cache?key=\" +\n      //     this.state.sprint.name +\n      //     \"&expiry=86400\",\n      //   {\n      //     method: \"post\",\n      //     body: JSON.stringify({\n      //       data: [{ date: today, work: currentPercentage }]\n      //     }),\n      //     headers: {\n      //       \"Content-Type\": \"application/json\"\n      //     }\n      //   }\n      // ).then(res => {\n      //   // alert(\"DATATATATATA -\", res);\n      //   this.fetchBurnDownData(\n      //     \"https://otis-app-fe-iaa-dev.azurewebsites.net/api/Redis?key=\" +\n      //       this.state.sprint.name\n      //   );\n      // });\n    }\n    if (this.state.burnDown.length > 0) {\n      // for(let i =0; i<=this.state.burnDown.length; i++){\n      // }\n      if (this.state.burnDown[this.state.burnDown.length - 1].date === today) {\n        if (\n          this.state.burnDown[this.state.burnDown.length - 1].work >\n          100 - currentPercentage\n        ) {\n          let currentburnDown = [...this.state.burnDown];\n          currentburnDown[this.state.burnDown.length - 1].work =\n            100 - currentPercentage;\n          this.setState({\n            burnDown: currentburnDown\n          });\n        }\n        this.postBurnDown(this.state.sprint.name, this.state.burnDown);\n      } else {\n        let currentburnDown = [...this.state.burnDown];\n        let todaysUpdate = { date: today, work: 100 - currentPercentage };\n        currentburnDown.push(todaysUpdate);\n        this.setState({\n          burnDown: currentburnDown\n        });\n        this.postBurnDown(this.state.sprint.name, this.state.burnDown);\n      }\n    }\n    // alert(mom.format(\"MMM-DD-YY\"));\n    // this.fetchBurnDownData(\n    //   \"https://otis-app-fe-iaa-dev.azurewebsites.net/api/Redis?key=test\"\n    // );\n    // alert(this.state.burnDown);\n    // alert(today);\n  };\n  //  Button click hanlders\n\n  teamsClickHandler = index => {\n    // alert(index);\n    let iterationUrl =\n      \"https://dev.azure.com/utcbis/Integrated%20AA/\" +\n      this.state.teams.value[index].name +\n      \"/_apis/work/teamsettings/iterations?api-version=5.0\";\n    // alert(iterationUrl);\n    this.fetchAgain(iterationUrl, \"iterations\");\n    this.setState({\n      loading: true\n    });\n  };\n  iterationClickHandler = index => {\n    // alert(index);\n    this.fetchAgain(this.state.iterations.value[index].url, \"sprint\");\n    this.setState({\n      loading: true,\n      selectedIteration: index\n    });\n  };\n  resetClickHandler = () => {\n    window.location.reload();\n  };\n  tinyAreaChartClickHandler = () => {\n    alert(\"Details of !!!!!\");\n  };\n  //  click handlers ends\n  render() {\n    let loader = null;\n    if (this.state.loading) {\n      return (\n        <div className=\"sweet-loading\">\n          <HashLoader\n            sizeUnit={\"px\"}\n            size={150}\n            color={\"#3aafa9\"}\n            loading={this.state.loading}\n          />\n        </div>\n      );\n    }\n    // console.log(\"this.state.currentDisplay\", this.state.currentDisplay);\n    let display = null;\n    if (this.state.authenticated) {\n      if (this.state.currentDisplay === \"teams\") {\n        display = (\n          <Teams\n            teams={this.state.teams}\n            click={this.teamsClickHandler.bind(this)}\n          />\n        );\n      } else if (this.state.currentDisplay === \"iterations\") {\n        display = (\n          <Iterations\n            iterations={this.state.iterations}\n            click={this.iterationClickHandler.bind(this)}\n          />\n        );\n      } else if (this.state.currentDisplay === \"pbis\") {\n        display = (\n          <Sprint\n            burnDown={this.state.burnDown}\n            click={this.tinyAreaChartClickHandler.bind(this)}\n            currentSprint={this.state}\n          />\n        );\n      } else {\n        display = null;\n      }\n    } else {\n      display = <Login />;\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <FaRegChartBar className=\"appIcon\" size=\"1.75em\" />\n          <FaUndoAlt\n            className=\"resetIcon\"\n            size=\"1em\"\n            onClick={this.resetClickHandler.bind(this)}\n          />\n          <p className=\"headerParagrah\">IAA daily Sprint status</p>\n          {/* {this.state.selectedIteration !== null ? (\n            <p>Selected Iteration: {this.state.selectedIteration}</p>\n          ) : null} */}\n        </header>\n        {display}\n        {loader}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}